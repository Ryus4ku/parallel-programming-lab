package ru.ryu;

import java.util.concurrent.Semaphore;

public class Main {
    public static void main(String[] args) {
        /**
         * Для управления доступом к ресурсу семафор использует счетчик, представляющий количество разрешений.
         * Если значение счетчика больше нуля, то поток получает доступ к ресурсу, при этом счетчик уменьшается на единицу.
         * После окончания работы с ресурсом поток освобождает семафор, и счетчик увеличивается на единицу.
         * Если же счетчик равен нулю, то поток блокируется и ждет, пока не получит разрешение от семафора.
         * @param permits - кол-во допустимых разрешений для доступа к ресурсу.
         * @param fair: true, то разрешения будут предоставляться ожидающим потокам в том порядке, в каком они запрашивали доступ;
         *              false, то разрешения будут предоставляться в неопределенном порядке.
         */
        Semaphore sem = new Semaphore(2, true);
        for(int i=1;i<6;i++) {
            new Philosopher(sem, i).start();
        }
    }
}